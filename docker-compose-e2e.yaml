# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

volumes:
  orderer.example.com:
  peer0.police.example.com:
  peer1.police.example.com:
  peer0.lawyers.example.com:
  peer1.lawyers.example.com:
  peer0.forensics.example.com:
  peer1.forensics.example.com:
  peer0.court.example.com:
  peer1.court.example.com:


networks:
  byfn:
services:
  ca.police.example.com:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca_peerPolice
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.police.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/4c18b7a54b58f1c49bd82d929510dcee90b51e184b34778c709fdae82b2a4c19_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.police.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/4c18b7a54b58f1c49bd82d929510dcee90b51e184b34778c709fdae82b2a4c19_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/police.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./artifacts/ca-config/police/fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
    container_name: ca_peerPolice
    networks:
      - byfn

  ca.lawyers.example.com:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca_peerLawyers
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.lawyers.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/06c5211782ab6e6f9efbbf3d38aefda228eda1b4633ec660a6ef66ec4f81f40c_sk
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.lawyers.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/06c5211782ab6e6f9efbbf3d38aefda228eda1b4633ec660a6ef66ec4f81f40c_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/lawyers.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./artifacts/ca-config/lawyers/fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
    container_name: ca_peerLawyers
    networks:
      - byfn
    
  ca.court.example.com:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca_peerCourt
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.court.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/b32564a8ebc81621045e01f60d60203755583abd506082fcbd71b2f8e0ec8984_sk
    ports:
      - "9054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.court.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/b32564a8ebc81621045e01f60d60203755583abd506082fcbd71b2f8e0ec8984_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/court.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./artifacts/ca-config/court/fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
    container_name: ca_peerCourt
    networks:
      - byfn

  ca.forensics.example.com:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca_peerForensics
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.forensics.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/150c88a13fbc6fe483bafaba4e1ddf771360216254b2624d02c41b541805ecdc_sk
    ports:
      - "10054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.forensics.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/150c88a13fbc6fe483bafaba4e1ddf771360216254b2624d02c41b541805ecdc_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/forensics.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./artifacts/ca-config/forensics/fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
    container_name: ca_peerForensics
    networks:
      - byfn

  orderer.example.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: orderer.example.com
    container_name: orderer.example.com
    networks:
      - byfn

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      - byfn

  peer0.police.example.com:
    container_name: peer0.police.example.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.police.example.com
    networks:
      - byfn
    depends_on:
      - couchdb0

  peer1.police.example.com:
    container_name: peer1.police.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.police.example.com
    networks:
      - byfn

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "6984:5984"
    networks:
      - byfn

  peer0.lawyers.example.com:
    container_name: peer0.lawyers.example.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.lawyers.example.com
    networks:
      - byfn
    depends_on:
      - couchdb1

  peer1.lawyers.example.com:
    container_name: peer1.lawyers.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.lawyers.example.com
    networks:
      - byfn

  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "7984:5984"
    networks:
      - byfn

  peer0.forensics.example.com:
    container_name: peer0.forensics.example.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.forensics.example.com
    networks:
      - byfn
    depends_on:
      - couchdb2

  peer1.forensics.example.com:
    container_name: peer1.forensics.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.forensics.example.com
    networks:
      - byfn

  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "8984:5984"
    networks:
      - byfn

  peer0.court.example.com:
    container_name: peer0.court.example.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.court.example.com
    networks:
      - byfn
    depends_on:
      - couchdb3

  peer1.court.example.com:
    container_name: peer1.court.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.court.example.com
    networks:
      - byfn
